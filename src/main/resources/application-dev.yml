server:
  port: 80
  servlet:
    encoding:
      charset: UTF-8
      force: true
spring:
  config:
    import: optional:file:.env[.properties]  # .env import
  ai:
    vectorstore:
      pgvector:
        initialize-schema: true
    openai:
      #api-key: ${GEMINI_API_KEY}
      #chat:
      #  options:
      #    model: gemini-2.5-flash
      #    temperature: 0.0
      #    max-tokens: 1000
      #  completions-path: /v1/chat/completions
      #  base-url: https://generativelanguage.googleapis.com/v1beta/openai/
      api-key: ${OPENAI_API_KEY}
      chat:
        options:
          model: gpt-4o
          temperature: 0.1
          max-tokens: 1000
  mvc:
    view:
      prefix: /views/
      suffix: .jsp
#  datasource:
  #    secondary:
  #    #url: jdbc:mysql://127.0.0.1:3306/shopdb?serverTimezone=Asia/Seoul
  #    driver-class-name: net.sf.log4jdbc.sql.jdbcapi.DriverSpy
  #    url: jdbc:log4jdbc:mysql://127.0.0.1:3306/shopdb?characterEncoding=utf8
  #    username: smuser
  #    password: 111111
  datasource:
#    primary:
    url: jdbc:postgresql://localhost:5432/postgres
    username: postgres
    password: 111111
mybatis:
  type-aliases-package: edu.sm.app.dto
  mapper-locations: classpath:/mapper/*.xml
  configuration:
    map-underscore-to-camel-case: true
logging:
  level:
    root: info

# Application Config
app:
  dir:
    saveaudiodir: C:/test1/audio/
    imgsdir: file:///C:/smu/imgs/     # 화면 출력 용
    uploadimgsdir: C:/smu/imgs/    # 파일 Write 용








